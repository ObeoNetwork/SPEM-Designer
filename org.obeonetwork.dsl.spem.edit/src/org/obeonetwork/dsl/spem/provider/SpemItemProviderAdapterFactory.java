/**
 * THALES (c)
 */
package org.obeonetwork.dsl.spem.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.obeonetwork.dsl.spem.util.SpemAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class SpemItemProviderAdapterFactory extends SpemAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public SpemItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Kind} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KindItemProvider kindItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Kind}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKindAdapter() {
		if (kindItemProvider == null) {
			kindItemProvider = new KindItemProvider(this);
		}

		return kindItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.WorkDefinitionParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkDefinitionParameterItemProvider workDefinitionParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.WorkDefinitionParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkDefinitionParameterAdapter() {
		if (workDefinitionParameterItemProvider == null) {
			workDefinitionParameterItemProvider = new WorkDefinitionParameterItemProvider(this);
		}

		return workDefinitionParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.WorkSequence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkSequenceItemProvider workSequenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.WorkSequence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkSequenceAdapter() {
		if (workSequenceItemProvider == null) {
			workSequenceItemProvider = new WorkSequenceItemProvider(this);
		}

		return workSequenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Activity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityItemProvider activityItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Activity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActivityAdapter() {
		if (activityItemProvider == null) {
			activityItemProvider = new ActivityItemProvider(this);
		}

		return activityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.ProcessPerformer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessPerformerItemProvider processPerformerItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.ProcessPerformer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessPerformerAdapter() {
		if (processPerformerItemProvider == null) {
			processPerformerItemProvider = new ProcessPerformerItemProvider(this);
		}

		return processPerformerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.RoleUse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleUseItemProvider roleUseItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.RoleUse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleUseAdapter() {
		if (roleUseItemProvider == null) {
			roleUseItemProvider = new RoleUseItemProvider(this);
		}

		return roleUseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.ProcessResponsibilityAssignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessResponsibilityAssignmentItemProvider processResponsibilityAssignmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.ProcessResponsibilityAssignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessResponsibilityAssignmentAdapter() {
		if (processResponsibilityAssignmentItemProvider == null) {
			processResponsibilityAssignmentItemProvider = new ProcessResponsibilityAssignmentItemProvider(this);
		}

		return processResponsibilityAssignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.WorkProductUse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkProductUseItemProvider workProductUseItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.WorkProductUse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkProductUseAdapter() {
		if (workProductUseItemProvider == null) {
			workProductUseItemProvider = new WorkProductUseItemProvider(this);
		}

		return workProductUseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.WorkProductUseRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkProductUseRelationshipItemProvider workProductUseRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.WorkProductUseRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkProductUseRelationshipAdapter() {
		if (workProductUseRelationshipItemProvider == null) {
			workProductUseRelationshipItemProvider = new WorkProductUseRelationshipItemProvider(this);
		}

		return workProductUseRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.ProcessParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessParameterItemProvider processParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.ProcessParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessParameterAdapter() {
		if (processParameterItemProvider == null) {
			processParameterItemProvider = new ProcessParameterItemProvider(this);
		}

		return processParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Milestone} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MilestoneItemProvider milestoneItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Milestone}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMilestoneAdapter() {
		if (milestoneItemProvider == null) {
			milestoneItemProvider = new MilestoneItemProvider(this);
		}

		return milestoneItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Category} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CategoryItemProvider categoryItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Category}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCategoryAdapter() {
		if (categoryItemProvider == null) {
			categoryItemProvider = new CategoryItemProvider(this);
		}

		return categoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Guidance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GuidanceItemProvider guidanceItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Guidance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGuidanceAdapter() {
		if (guidanceItemProvider == null) {
			guidanceItemProvider = new GuidanceItemProvider(this);
		}

		return guidanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Metric} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetricItemProvider metricItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Metric}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetricAdapter() {
		if (metricItemProvider == null) {
			metricItemProvider = new MetricItemProvider(this);
		}

		return metricItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.ToolDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ToolDefinitionItemProvider toolDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.ToolDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createToolDefinitionAdapter() {
		if (toolDefinitionItemProvider == null) {
			toolDefinitionItemProvider = new ToolDefinitionItemProvider(this);
		}

		return toolDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.TaskDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskDefinitionItemProvider taskDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.TaskDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskDefinitionAdapter() {
		if (taskDefinitionItemProvider == null) {
			taskDefinitionItemProvider = new TaskDefinitionItemProvider(this);
		}

		return taskDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Step} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StepItemProvider stepItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Step}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStepAdapter() {
		if (stepItemProvider == null) {
			stepItemProvider = new StepItemProvider(this);
		}

		return stepItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.WorkProductDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkProductDefinitionItemProvider workProductDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.WorkProductDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkProductDefinitionAdapter() {
		if (workProductDefinitionItemProvider == null) {
			workProductDefinitionItemProvider = new WorkProductDefinitionItemProvider(this);
		}

		return workProductDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.RoleDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleDefinitionItemProvider roleDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.RoleDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleDefinitionAdapter() {
		if (roleDefinitionItemProvider == null) {
			roleDefinitionItemProvider = new RoleDefinitionItemProvider(this);
		}

		return roleDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.WorkProductDefinitionRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkProductDefinitionRelationshipItemProvider workProductDefinitionRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.WorkProductDefinitionRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkProductDefinitionRelationshipAdapter() {
		if (workProductDefinitionRelationshipItemProvider == null) {
			workProductDefinitionRelationshipItemProvider = new WorkProductDefinitionRelationshipItemProvider(this);
		}

		return workProductDefinitionRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Default_TaskDefinitionPerformer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Default_TaskDefinitionPerformerItemProvider default_TaskDefinitionPerformerItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Default_TaskDefinitionPerformer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefault_TaskDefinitionPerformerAdapter() {
		if (default_TaskDefinitionPerformerItemProvider == null) {
			default_TaskDefinitionPerformerItemProvider = new Default_TaskDefinitionPerformerItemProvider(this);
		}

		return default_TaskDefinitionPerformerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Default_ResponsibilityAssignment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Default_ResponsibilityAssignmentItemProvider default_ResponsibilityAssignmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Default_ResponsibilityAssignment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefault_ResponsibilityAssignmentAdapter() {
		if (default_ResponsibilityAssignmentItemProvider == null) {
			default_ResponsibilityAssignmentItemProvider = new Default_ResponsibilityAssignmentItemProvider(this);
		}

		return default_ResponsibilityAssignmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Default_TaskDefinitionParameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Default_TaskDefinitionParameterItemProvider default_TaskDefinitionParameterItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Default_TaskDefinitionParameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefault_TaskDefinitionParameterAdapter() {
		if (default_TaskDefinitionParameterItemProvider == null) {
			default_TaskDefinitionParameterItemProvider = new Default_TaskDefinitionParameterItemProvider(this);
		}

		return default_TaskDefinitionParameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.Qualification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QualificationItemProvider qualificationItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.Qualification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQualificationAdapter() {
		if (qualificationItemProvider == null) {
			qualificationItemProvider = new QualificationItemProvider(this);
		}

		return qualificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.MethodContentPackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MethodContentPackageItemProvider methodContentPackageItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.MethodContentPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMethodContentPackageAdapter() {
		if (methodContentPackageItemProvider == null) {
			methodContentPackageItemProvider = new MethodContentPackageItemProvider(this);
		}

		return methodContentPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.ProcessPackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessPackageItemProvider processPackageItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.ProcessPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessPackageAdapter() {
		if (processPackageItemProvider == null) {
			processPackageItemProvider = new ProcessPackageItemProvider(this);
		}

		return processPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.PlanningData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlanningDataItemProvider planningDataItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.PlanningData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlanningDataAdapter() {
		if (planningDataItemProvider == null) {
			planningDataItemProvider = new PlanningDataItemProvider(this);
		}

		return planningDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.TaskUse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskUseItemProvider taskUseItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.TaskUse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskUseAdapter() {
		if (taskUseItemProvider == null) {
			taskUseItemProvider = new TaskUseItemProvider(this);
		}

		return taskUseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.CompositeRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeRoleItemProvider compositeRoleItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.CompositeRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeRoleAdapter() {
		if (compositeRoleItemProvider == null) {
			compositeRoleItemProvider = new CompositeRoleItemProvider(this);
		}

		return compositeRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.TeamProfile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TeamProfileItemProvider teamProfileItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.TeamProfile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTeamProfileAdapter() {
		if (teamProfileItemProvider == null) {
			teamProfileItemProvider = new TeamProfileItemProvider(this);
		}

		return teamProfileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.ProcessComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessComponentItemProvider processComponentItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.ProcessComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessComponentAdapter() {
		if (processComponentItemProvider == null) {
			processComponentItemProvider = new ProcessComponentItemProvider(this);
		}

		return processComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.ProcessComponentUse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessComponentUseItemProvider processComponentUseItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.ProcessComponentUse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessComponentUseAdapter() {
		if (processComponentUseItemProvider == null) {
			processComponentUseItemProvider = new ProcessComponentUseItemProvider(this);
		}

		return processComponentUseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.MethodConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MethodConfigurationItemProvider methodConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.MethodConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMethodConfigurationAdapter() {
		if (methodConfigurationItemProvider == null) {
			methodConfigurationItemProvider = new MethodConfigurationItemProvider(this);
		}

		return methodConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.MethodPlugin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MethodPluginItemProvider methodPluginItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.MethodPlugin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMethodPluginAdapter() {
		if (methodPluginItemProvider == null) {
			methodPluginItemProvider = new MethodPluginItemProvider(this);
		}

		return methodPluginItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.MethodLibrary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MethodLibraryItemProvider methodLibraryItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.MethodLibrary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMethodLibraryAdapter() {
		if (methodLibraryItemProvider == null) {
			methodLibraryItemProvider = new MethodLibraryItemProvider(this);
		}

		return methodLibraryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.WorkProductPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkProductPortItemProvider workProductPortItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.WorkProductPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkProductPortAdapter() {
		if (workProductPortItemProvider == null) {
			workProductPortItemProvider = new WorkProductPortItemProvider(this);
		}

		return workProductPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.obeonetwork.dsl.spem.WorkProductPortConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkProductPortConnectorItemProvider workProductPortConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.obeonetwork.dsl.spem.WorkProductPortConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkProductPortConnectorAdapter() {
		if (workProductPortConnectorItemProvider == null) {
			workProductPortConnectorItemProvider = new WorkProductPortConnectorItemProvider(this);
		}

		return workProductPortConnectorItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (kindItemProvider != null) kindItemProvider.dispose();
		if (workDefinitionParameterItemProvider != null) workDefinitionParameterItemProvider.dispose();
		if (workSequenceItemProvider != null) workSequenceItemProvider.dispose();
		if (activityItemProvider != null) activityItemProvider.dispose();
		if (processPerformerItemProvider != null) processPerformerItemProvider.dispose();
		if (roleUseItemProvider != null) roleUseItemProvider.dispose();
		if (processResponsibilityAssignmentItemProvider != null) processResponsibilityAssignmentItemProvider.dispose();
		if (workProductUseItemProvider != null) workProductUseItemProvider.dispose();
		if (workProductUseRelationshipItemProvider != null) workProductUseRelationshipItemProvider.dispose();
		if (processParameterItemProvider != null) processParameterItemProvider.dispose();
		if (milestoneItemProvider != null) milestoneItemProvider.dispose();
		if (categoryItemProvider != null) categoryItemProvider.dispose();
		if (guidanceItemProvider != null) guidanceItemProvider.dispose();
		if (metricItemProvider != null) metricItemProvider.dispose();
		if (toolDefinitionItemProvider != null) toolDefinitionItemProvider.dispose();
		if (taskDefinitionItemProvider != null) taskDefinitionItemProvider.dispose();
		if (stepItemProvider != null) stepItemProvider.dispose();
		if (workProductDefinitionItemProvider != null) workProductDefinitionItemProvider.dispose();
		if (roleDefinitionItemProvider != null) roleDefinitionItemProvider.dispose();
		if (workProductDefinitionRelationshipItemProvider != null) workProductDefinitionRelationshipItemProvider.dispose();
		if (default_TaskDefinitionPerformerItemProvider != null) default_TaskDefinitionPerformerItemProvider.dispose();
		if (default_ResponsibilityAssignmentItemProvider != null) default_ResponsibilityAssignmentItemProvider.dispose();
		if (default_TaskDefinitionParameterItemProvider != null) default_TaskDefinitionParameterItemProvider.dispose();
		if (qualificationItemProvider != null) qualificationItemProvider.dispose();
		if (methodContentPackageItemProvider != null) methodContentPackageItemProvider.dispose();
		if (processPackageItemProvider != null) processPackageItemProvider.dispose();
		if (planningDataItemProvider != null) planningDataItemProvider.dispose();
		if (taskUseItemProvider != null) taskUseItemProvider.dispose();
		if (compositeRoleItemProvider != null) compositeRoleItemProvider.dispose();
		if (teamProfileItemProvider != null) teamProfileItemProvider.dispose();
		if (processComponentItemProvider != null) processComponentItemProvider.dispose();
		if (processComponentUseItemProvider != null) processComponentUseItemProvider.dispose();
		if (methodConfigurationItemProvider != null) methodConfigurationItemProvider.dispose();
		if (methodPluginItemProvider != null) methodPluginItemProvider.dispose();
		if (methodLibraryItemProvider != null) methodLibraryItemProvider.dispose();
		if (workProductPortItemProvider != null) workProductPortItemProvider.dispose();
		if (workProductPortConnectorItemProvider != null) workProductPortConnectorItemProvider.dispose();
	}

}
